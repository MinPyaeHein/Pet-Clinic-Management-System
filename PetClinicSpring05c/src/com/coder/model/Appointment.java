package com.coder.model;
// Generated Aug 4, 2020 2:43:24 PM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Appointment generated by hbm2java
 */
@Entity
@Table(name = "appointment", catalog = "pet_clinic1")
public class Appointment implements java.io.Serializable {

	private Integer appointmentId;
	private Doctor doctor;
	private DoctorSchedule doctorSchedule;
	private Owner owner;
	private Pet pet;
	private Date appointmentDate;
	private Date appointmentTime;
	private String appointmentInfo;
	private Set<AppointmentServic> appointmentServics = new HashSet<AppointmentServic>(0);
	private Set<PetDrug> petDrugs = new HashSet<PetDrug>(0);

	public Appointment() {
	}

	public Appointment(Doctor doctor, DoctorSchedule doctorSchedule, Owner owner, Pet pet, Date appointmentDate,
			String appointmentInfo) {
		this.doctor = doctor;
		this.doctorSchedule = doctorSchedule;
		this.owner = owner;
		this.pet = pet;
		this.appointmentDate = appointmentDate;
		this.appointmentInfo = appointmentInfo;
	}

	public Appointment(Doctor doctor, DoctorSchedule doctorSchedule, Owner owner, Pet pet, Date appointmentDate,
			Date appointmentTime, String appointmentInfo, Set<AppointmentServic> appointmentServics,
			Set<PetDrug> petDrugs) {
		this.doctor = doctor;
		this.doctorSchedule = doctorSchedule;
		this.owner = owner;
		this.pet = pet;
		this.appointmentDate = appointmentDate;
		this.appointmentTime = appointmentTime;
		this.appointmentInfo = appointmentInfo;
		this.appointmentServics = appointmentServics;
		this.petDrugs = petDrugs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "appointment_id", unique = true, nullable = false)
	public Integer getAppointmentId() {
		return this.appointmentId;
	}

	public void setAppointmentId(Integer appointmentId) {
		this.appointmentId = appointmentId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "doctor_id", nullable = false)
	public Doctor getDoctor() {
		return this.doctor;
	}

	public void setDoctor(Doctor doctor) {
		this.doctor = doctor;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "schedule_id", nullable = false)
	public DoctorSchedule getDoctorSchedule() {
		return this.doctorSchedule;
	}

	public void setDoctorSchedule(DoctorSchedule doctorSchedule) {
		this.doctorSchedule = doctorSchedule;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "owner_id", nullable = false)
	public Owner getOwner() {
		return this.owner;
	}

	public void setOwner(Owner owner) {
		this.owner = owner;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "pet_id", nullable = false)
	public Pet getPet() {
		return this.pet;
	}

	public void setPet(Pet pet) {
		this.pet = pet;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "appointment_date", nullable = false, length = 10)
	public Date getAppointmentDate() {
		return this.appointmentDate;
	}

	public void setAppointmentDate(Date appointmentDate) {
		this.appointmentDate = appointmentDate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "appointment_time", length = 8)
	public Date getAppointmentTime() {
		return this.appointmentTime;
	}

	public void setAppointmentTime(Date appointmentTime) {
		this.appointmentTime = appointmentTime;
	}

	@Column(name = "appointment_info", nullable = false, length = 200)
	public String getAppointmentInfo() {
		return this.appointmentInfo;
	}

	public void setAppointmentInfo(String appointmentInfo) {
		this.appointmentInfo = appointmentInfo;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "appointment")
	public Set<AppointmentServic> getAppointmentServics() {
		return this.appointmentServics;
	}

	public void setAppointmentServics(Set<AppointmentServic> appointmentServics) {
		this.appointmentServics = appointmentServics;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "appointment")
	public Set<PetDrug> getPetDrugs() {
		return this.petDrugs;
	}

	public void setPetDrugs(Set<PetDrug> petDrugs) {
		this.petDrugs = petDrugs;
	}

}
