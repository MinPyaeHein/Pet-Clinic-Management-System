package com.coder.model;
// Generated Jul 17, 2020 9:43:20 PM by Hibernate Tools 5.0.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Doctor generated by hbm2java
 */
@Entity
@Table(name = "doctor", catalog = "pet_clinic1")
public class Doctor implements java.io.Serializable {

	private Integer doctorId;
	private Rank rank;
	private String doctorName;
	private String doctorGmail;
	private String doctorAddress;
	private String doctorAbout;
	private String doctorGender;
	private String doctorPhone;
	private Set<DoctorServic> doctorServics = new HashSet<DoctorServic>(0);
	private Set<PetDrug> petDrugs = new HashSet<PetDrug>(0);
	private Set<Appointment> appointments = new HashSet<Appointment>(0);
	private Set<DoctorSchedule> doctorSchedules = new HashSet<DoctorSchedule>(0);

	public Doctor() {
	}

	public Doctor(Rank rank, String doctorName, String doctorGmail, String doctorAddress, String doctorAbout,
			String doctorGender, String doctorPhone) {
		this.rank = rank;
		this.doctorName = doctorName;
		this.doctorGmail = doctorGmail;
		this.doctorAddress = doctorAddress;
		this.doctorAbout = doctorAbout;
		this.doctorGender = doctorGender;
		this.doctorPhone = doctorPhone;
	}

	public Doctor(Rank rank, String doctorName, String doctorGmail, String doctorAddress, String doctorAbout,
			String doctorGender, String doctorPhone, Set<DoctorServic> doctorServics, Set<PetDrug> petDrugs,
			Set<Appointment> appointments, Set<DoctorSchedule> doctorSchedules) {
		this.rank = rank;
		this.doctorName = doctorName;
		this.doctorGmail = doctorGmail;
		this.doctorAddress = doctorAddress;
		this.doctorAbout = doctorAbout;
		this.doctorGender = doctorGender;
		this.doctorPhone = doctorPhone;
		this.doctorServics = doctorServics;
		this.petDrugs = petDrugs;
		this.appointments = appointments;
		this.doctorSchedules = doctorSchedules;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "doctor_id", unique = true, nullable = false)
	public Integer getDoctorId() {
		return this.doctorId;
	}

	public void setDoctorId(Integer doctorId) {
		this.doctorId = doctorId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "rank_id", nullable = false)
	public Rank getRank() {
		return this.rank;
	}

	public void setRank(Rank rank) {
		this.rank = rank;
	}

	@Column(name = "doctor_name", nullable = false, length = 25)
	public String getDoctorName() {
		return this.doctorName;
	}

	public void setDoctorName(String doctorName) {
		this.doctorName = doctorName;
	}

	@Column(name = "doctor_gmail", nullable = false, length = 50)
	public String getDoctorGmail() {
		return this.doctorGmail;
	}

	public void setDoctorGmail(String doctorGmail) {
		this.doctorGmail = doctorGmail;
	}

	@Column(name = "doctor_address", nullable = false, length = 100)
	public String getDoctorAddress() {
		return this.doctorAddress;
	}

	public void setDoctorAddress(String doctorAddress) {
		this.doctorAddress = doctorAddress;
	}

	@Column(name = "doctor_about", nullable = false, length = 200)
	public String getDoctorAbout() {
		return this.doctorAbout;
	}

	public void setDoctorAbout(String doctorAbout) {
		this.doctorAbout = doctorAbout;
	}

	@Column(name = "doctor_gender", nullable = false, length = 2)
	public String getDoctorGender() {
		return this.doctorGender;
	}

	public void setDoctorGender(String doctorGender) {
		this.doctorGender = doctorGender;
	}

	@Column(name = "doctor_phone", nullable = false, length = 20)
	public String getDoctorPhone() {
		return this.doctorPhone;
	}

	public void setDoctorPhone(String doctorPhone) {
		this.doctorPhone = doctorPhone;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "doctor")
	public Set<DoctorServic> getDoctorServics() {
		return this.doctorServics;
	}

	public void setDoctorServics(Set<DoctorServic> doctorServics) {
		this.doctorServics = doctorServics;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "doctor")
	public Set<PetDrug> getPetDrugs() {
		return this.petDrugs;
	}

	public void setPetDrugs(Set<PetDrug> petDrugs) {
		this.petDrugs = petDrugs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "doctor")
	public Set<Appointment> getAppointments() {
		return this.appointments;
	}

	public void setAppointments(Set<Appointment> appointments) {
		this.appointments = appointments;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "doctor")
	public Set<DoctorSchedule> getDoctorSchedules() {
		return this.doctorSchedules;
	}

	public void setDoctorSchedules(Set<DoctorSchedule> doctorSchedules) {
		this.doctorSchedules = doctorSchedules;
	}

}
